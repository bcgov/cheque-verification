name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Run tests & collect coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            frontend/package-lock.json
            backend/package-lock.json
            api/package-lock.json

      - name: Install deps (frontend)
        working-directory: frontend
        run: npm ci --prefer-offline --no-audit

      - name: Install deps (backend)
        working-directory: backend
        run: npm ci --prefer-offline --no-audit

      - name: Install deps (api)
        working-directory: api
        run: npm ci --prefer-offline --no-audit

      - name: Run tests w/ coverage (frontend)
        working-directory: frontend
        env:
          CI: true
          NODE_ENV: test
        run: npm run test:coverage

      - name: Run tests w/ coverage (backend)
        working-directory: backend
        env:
          CI: true
          NODE_ENV: test
        run: npm run test:coverage

      - name: Run tests w/ coverage (api)
        working-directory: api
        env:
          CI: true
          NODE_ENV: test
        run: npm run test:coverage

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            frontend/coverage/lcov.info
            backend/coverage/lcov.info
            api/coverage/lcov.info
          if-no-files-found: error

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-reports

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
