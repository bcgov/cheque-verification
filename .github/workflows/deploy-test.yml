name: Build and Deploy to Test

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment:
      name: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build frontend image
      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}

      # Build backend image
      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

    outputs:
      image_tag: ${{ steps.meta-frontend.outputs.version }} #for simplicity, using the same tag for both images

  deploy:
    needs: build_and_push
    environment:
      name: test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      # Deploy to Silver (frontend and backend)
      - name: Authenticate with OpenShift Silver
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}

      - name: Deploy frontend and backend with Helm
        run: |
          helm upgrade --install cheque-verification-frontend ./helm/cheque-verification-frontend \
            --namespace ${{ secrets.OPENSHIFT_NAMESPACE }} \
            --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend \
            --set image.tag=${{ needs.build_and_push.outputs.image_tag }}

          helm upgrade --install cheque-verification-backend ./helm/cheque-verification-backend \
            --namespace ${{ secrets.OPENSHIFT_NAMESPACE }} \
            --set image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend \
            --set image.tag=${{ needs.build_and_push.outputs.image_tag }}

      - name: Trigger OpenShift Rollout for Silver
        run: |
          oc rollout restart deployment/cheque-verification-frontend
          oc rollout restart deployment/cheque-verification-backend
